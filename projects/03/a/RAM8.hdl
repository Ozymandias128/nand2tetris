// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=ram0, b=ram1, c=ram2, d=ram3, e=ram4, f=ram5, g=ram6, h=ram7);

    Register(in=in, load=ram0, out=outToMux1);
    Register(in=in, load=ram1, out=outToMux2);
    Register(in=in, load=ram2, out=outToMux3);
    Register(in=in, load=ram3, out=outToMux4);
    Register(in=in, load=ram4, out=outToMux5);
    Register(in=in, load=ram5, out=outToMux6);
    Register(in=in, load=ram6, out=outToMux7);
    Register(in=in, load=ram7, out=outToMux8);
    
    Mux8Way16(a=outToMux1, b=outToMux2, c=outToMux3, d=outToMux4, e=outToMux5, f=outToMux6, g=outToMux7, h=outToMux8, sel=address, out=out);
}